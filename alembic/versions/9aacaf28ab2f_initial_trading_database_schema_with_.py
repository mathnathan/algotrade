"""Initial trading database schema with historical data tables

Revision ID: 9aacaf28ab2f
Revises: 
Create Date: 2025-08-10 02:21:58.788882

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9aacaf28ab2f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('historical_news',
    sa.Column('id', sa.BigInteger(), autoincrement=False, nullable=False),
    sa.Column('headline', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('symbols', postgresql.ARRAY(sa.String(length=10)), nullable=True),
    sa.Column('primary_symbol', sa.String(length=10), nullable=True),
    sa.Column('images', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('sentiment_score', sa.Float(), nullable=True),
    sa.Column('sentiment_magnitude', sa.Float(), nullable=True),
    sa.Column('sentiment_model_version', sa.String(length=50), nullable=True),
    sa.Column('news_category', sa.String(length=50), nullable=True),
    sa.Column('market_relevance_score', sa.Float(), nullable=True),
    sa.Column('is_market_moving', sa.Boolean(), nullable=False),
    sa.Column('is_processed', sa.Boolean(), nullable=False),
    sa.Column('processing_errors', sa.Text(), nullable=True),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('data_inserted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('data_updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint("headline IS NOT NULL AND trim(headline) != ''", name=op.f('ck_historical_news_ck_news_headline_not_empty')),
    sa.CheckConstraint('data_quality_score IS NULL OR (data_quality_score >= 0 AND data_quality_score <= 1)', name=op.f('ck_historical_news_ck_news_quality_range')),
    sa.CheckConstraint('market_relevance_score IS NULL OR (market_relevance_score >= 0 AND market_relevance_score <= 1)', name=op.f('ck_historical_news_ck_news_relevance_range')),
    sa.CheckConstraint('sentiment_magnitude IS NULL OR (sentiment_magnitude >= 0 AND sentiment_magnitude <= 1)', name=op.f('ck_historical_news_ck_news_magnitude_range')),
    sa.CheckConstraint('sentiment_score IS NULL OR (sentiment_score >= -1 AND sentiment_score <= 1)', name=op.f('ck_historical_news_ck_news_sentiment_range')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_historical_news'))
    )
    op.create_index(op.f('ix_historical_news_created_at'), 'historical_news', ['created_at'], unique=False)
    op.create_index(op.f('ix_historical_news_news_category'), 'historical_news', ['news_category'], unique=False)
    op.create_index(op.f('ix_historical_news_primary_symbol'), 'historical_news', ['primary_symbol'], unique=False)
    op.create_index(op.f('ix_historical_news_source'), 'historical_news', ['source'], unique=False)
    op.create_index('ix_news_category_time', 'historical_news', ['news_category', 'created_at'], unique=False)
    op.create_index('ix_news_created_at', 'historical_news', ['created_at'], unique=False)
    op.create_index('ix_news_high_quality', 'historical_news', ['primary_symbol', 'created_at'], unique=False, postgresql_where='is_market_moving = true AND data_quality_score > 0.8')
    op.create_index('ix_news_market_moving', 'historical_news', ['is_market_moving', 'created_at'], unique=False)
    op.create_index('ix_news_primary_symbol_time', 'historical_news', ['primary_symbol', 'created_at'], unique=False)
    op.create_index('ix_news_processing_status', 'historical_news', ['is_processed', 'data_inserted_at'], unique=False)
    op.create_index('ix_news_quality_monitoring', 'historical_news', ['data_quality_score', 'is_processed'], unique=False)
    op.create_index('ix_news_sentiment_analysis', 'historical_news', ['sentiment_score', 'sentiment_magnitude', 'created_at'], unique=False)
    op.create_index('ix_news_sentiment_correlation', 'historical_news', ['primary_symbol', 'created_at', 'sentiment_score', 'market_relevance_score'], unique=False)
    op.create_index('ix_news_source_time', 'historical_news', ['source', 'created_at'], unique=False)
    op.create_index('ix_news_symbols_gin', 'historical_news', ['symbols'], unique=False, postgresql_using='gin')
    op.create_table('historical_prices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('open', sa.Numeric(precision=15, scale=6), nullable=False),
    sa.Column('high', sa.Numeric(precision=15, scale=6), nullable=False),
    sa.Column('low', sa.Numeric(precision=15, scale=6), nullable=False),
    sa.Column('close', sa.Numeric(precision=15, scale=6), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('trade_count', sa.BigInteger(), nullable=False),
    sa.Column('vwap', sa.Numeric(precision=15, scale=6), nullable=True),
    sa.Column('dollar_volume', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('average_trade_size', sa.Numeric(precision=15, scale=6), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=False),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('is_validated', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.CheckConstraint('close > 0', name=op.f('ck_historical_prices_ck_historical_prices_close_positive')),
    sa.CheckConstraint('data_quality_score IS NULL OR (data_quality_score >= 0 AND data_quality_score <= 1)', name=op.f('ck_historical_prices_ck_historical_prices_quality_score_range')),
    sa.CheckConstraint('high > 0', name=op.f('ck_historical_prices_ck_historical_prices_high_positive')),
    sa.CheckConstraint('high >= close', name=op.f('ck_historical_prices_ck_historical_prices_high_ge_close')),
    sa.CheckConstraint('high >= low', name=op.f('ck_historical_prices_ck_historical_prices_high_ge_low')),
    sa.CheckConstraint('high >= open', name=op.f('ck_historical_prices_ck_historical_prices_high_ge_open')),
    sa.CheckConstraint('low <= close', name=op.f('ck_historical_prices_ck_historical_prices_low_le_close')),
    sa.CheckConstraint('low <= open', name=op.f('ck_historical_prices_ck_historical_prices_low_le_open')),
    sa.CheckConstraint('low > 0', name=op.f('ck_historical_prices_ck_historical_prices_low_positive')),
    sa.CheckConstraint('open > 0', name=op.f('ck_historical_prices_ck_historical_prices_open_positive')),
    sa.CheckConstraint('trade_count >= 0', name=op.f('ck_historical_prices_ck_historical_prices_trade_count_non_negative')),
    sa.CheckConstraint('volume >= 0', name=op.f('ck_historical_prices_ck_historical_prices_volume_non_negative')),
    sa.CheckConstraint('vwap IS NULL OR (vwap >= low AND vwap <= high)', name=op.f('ck_historical_prices_ck_historical_prices_vwap_range')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_historical_prices'))
    )
    op.create_index(op.f('ix_historical_prices_symbol'), 'historical_prices', ['symbol'], unique=False)
    op.create_index(op.f('ix_historical_prices_timestamp'), 'historical_prices', ['timestamp'], unique=False)
    op.create_index('ix_prices_high_volume', 'historical_prices', ['symbol', 'timestamp'], unique=False, postgresql_where='volume > 1000000')
    op.create_index('ix_prices_price_analysis', 'historical_prices', ['symbol', 'timestamp', 'close', 'volume'], unique=False)
    op.create_index('ix_prices_quality', 'historical_prices', ['data_quality_score', 'is_validated'], unique=False)
    op.create_index('ix_prices_symbol_timestamp', 'historical_prices', ['symbol', 'timestamp'], unique=False)
    op.create_index('ix_prices_timestamp_symbol', 'historical_prices', ['timestamp', 'symbol'], unique=False)
    op.create_index('ix_prices_validated', 'historical_prices', ['symbol', 'timestamp'], unique=False, postgresql_where='is_validated = true')
    op.create_index('ix_prices_volume_analysis', 'historical_prices', ['symbol', 'timestamp', 'volume'], unique=False)
    op.create_index('uq_prices_symbol_timestamp', 'historical_prices', ['symbol', 'timestamp'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('uq_prices_symbol_timestamp', table_name='historical_prices')
    op.drop_index('ix_prices_volume_analysis', table_name='historical_prices')
    op.drop_index('ix_prices_validated', table_name='historical_prices', postgresql_where='is_validated = true')
    op.drop_index('ix_prices_timestamp_symbol', table_name='historical_prices')
    op.drop_index('ix_prices_symbol_timestamp', table_name='historical_prices')
    op.drop_index('ix_prices_quality', table_name='historical_prices')
    op.drop_index('ix_prices_price_analysis', table_name='historical_prices')
    op.drop_index('ix_prices_high_volume', table_name='historical_prices', postgresql_where='volume > 1000000')
    op.drop_index(op.f('ix_historical_prices_timestamp'), table_name='historical_prices')
    op.drop_index(op.f('ix_historical_prices_symbol'), table_name='historical_prices')
    op.drop_table('historical_prices')
    op.drop_index('ix_news_symbols_gin', table_name='historical_news', postgresql_using='gin')
    op.drop_index('ix_news_source_time', table_name='historical_news')
    op.drop_index('ix_news_sentiment_correlation', table_name='historical_news')
    op.drop_index('ix_news_sentiment_analysis', table_name='historical_news')
    op.drop_index('ix_news_quality_monitoring', table_name='historical_news')
    op.drop_index('ix_news_processing_status', table_name='historical_news')
    op.drop_index('ix_news_primary_symbol_time', table_name='historical_news')
    op.drop_index('ix_news_market_moving', table_name='historical_news')
    op.drop_index('ix_news_high_quality', table_name='historical_news', postgresql_where='is_market_moving = true AND data_quality_score > 0.8')
    op.drop_index('ix_news_created_at', table_name='historical_news')
    op.drop_index('ix_news_category_time', table_name='historical_news')
    op.drop_index(op.f('ix_historical_news_source'), table_name='historical_news')
    op.drop_index(op.f('ix_historical_news_primary_symbol'), table_name='historical_news')
    op.drop_index(op.f('ix_historical_news_news_category'), table_name='historical_news')
    op.drop_index(op.f('ix_historical_news_created_at'), table_name='historical_news')
    op.drop_table('historical_news')
    # ### end Alembic commands ###
