[project]
name = "algotrade"
version = "0.1.0"
description = "Automated trading bot using Alpaca API and deep learning"
requires-python = ">=3.13"
dependencies = [
    "alpaca-py>=0.25.0",
    "torch>=2.1.0",
    "transformers>=4.35.0",
    "sentence-transformers>=2.2.2",
    "apscheduler>=3.10.4",
    "pandas>=2.1.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.4.0",
    "httpx>=0.25.0",
    "asyncpg>=0.30.0",
    "psycopg2-binary>=2.9.0",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "pydantic-settings>=2.10.1",
    "peft>=0.16.0",
    "huggingface-hub>=0.33.1",
    "sqlalchemy>=2.0.41",
    "alembic>=1.16.2",
    "types-pytz>=2025.2.0.20250516",
    "pandas-stubs>=2.3.0.250703",
]

[project.optional-dependencies]
dev = [
    "jupyter>=1.0.0",
    "pytest>=7.4.0",
    "isort>=5.12.0",
    "ruff>=0.12.5",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Tell hatchling where our package is
[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
# Target Python 3.11+ for modern async features critical in trading
target-version = "py311"
line-length = 100
indent-width = 4

# Include common trading project structure
extend-include = ["*.ipynb"]
extend-exclude = [
    "__pycache__",
    ".pytest_cache",
    "logs/",
    "data/",
    "models/",
    ".env*"
]

[tool.ruff.lint]
# Enable essential rule sets for financial applications
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings  
    "F",    # Pyflakes
    "I",    # isort
    "B",    # flake8-bugbear (critical for avoiding trading bugs)
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "RUF",  # Ruff-specific rules
    "N",    # pep8-naming
    "S",    # flake8-bandit (security - important for API keys)
    "T20",  # flake8-print (catch debug prints before production)
    "PIE",  # flake8-pie
    "SIM",  # flake8-simplify
]

ignore = [
    "S101",   # assert statements (common in tests)
    "S301",   # pickle usage (needed for model serialization)
    "T201",   # print statements (useful during development)
    "E501",   # line too long (handled by formatter)
]

exclude = [
    "*.ipynb",
]

# Trading-specific configurations
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S106"]  # Allow asserts and hardcoded passwords in tests
"scripts/*" = ["T201"]        # Allow prints in utility scripts
"notebooks/*" = ["T201", "E402"]  # Relaxed rules for exploration notebooks

[tool.ruff.lint.isort]
known-first-party = ["src", "trading_bot"]
force-single-line = false
combine-as-imports = true

[tool.ruff.format]
# Format settings optimized for financial code readability
quote-style = "double"
indent-style = "space"
line-ending = "auto"

exclude = [
    "*.ipynb",
]

[tool.mypy]
plugins = ["pydantic.mypy"]

warn_return_any = true
warn_unused_configs = true

[tool.pydantic-mypy]
# Prohibit passing extra arguments to `__init__` that are not defined in the model
init_forbid_extra = true

# Ensure that `__init__` arguments are type-checked
init_typed = true

# Warn about fields that are required but have dynamic aliases
warn_required_dynamic_aliases = true
